;-----------------------------------------------------------
; Jogo da Memória 8051 (edSim51) - Parte 1
; Descrição: Setup inicial, controle de LEDs e delay.
;-----------------------------------------------------------
; --- Mapeamento de Hardware (8051) ---
     RS      equ     P1.3    ; Define o pino RS do LCD como P1.3
     EN      equ     P1.2    ; Define o pino EN do LCD como P1.2

     org 0000h
     LJMP INICIO     ; Inicia a execução do programa em INICIO

     org 0030h
     INICIO:
     ; Define os valores ASCII para os dígitos da sequência
      	; 0 = 41h
      	; 1 = 4Bh
      	; 2 = 4Ah
      	; 3	= 49h
      	; 4 = 48h
      	; 5 = 47h
      	; 6	= 46h
      	; 7 = 45h
      	; 8 = 44h
      	; 9 = 43h
       
 	MOV 31H, #48h ; Define o primeiro dígito da sequência como '4' (48h)
 	MOV 32H, #4Ah ; Define o segundo dígito da sequência como '2' (4Ah)
 	MOV 33H, #4Bh ; Define o terceiro dígito da sequência como '1' (4Bh)
 	MOV 34H, #49h ; Define o quarto dígito da sequência como '3' (49h)
	MOV 35H, #4Ah ; Define o segundo dígito da sequência como '2' (4Ah)
 	MOV 36H, #48h ; Define o terceiro dígito da sequência como '4' (48h)
 	MOV 37H, #49h ; Define o quarto dígito da sequência como '3' (49h)
       
       
 	MOV 20H, #'#' ; Define o caractere '#' para a tela do LCD
 	MOV 21H, #'0' ; Define o caractere '0' para a tela do LCD
 	MOV 22H, #'' ; Define o caractere '' para a tela do LCD
	MOV 23H, #'9' ; Define o caractere '9' para a tela do LCD
 	MOV 24H, #'8' ; Define o caractere '8' para a tela do LCD
 	MOV 25H, #'7' ; Define o caractere '7' para a tela do LCD
 	MOV 26H, #'6' ; Define o caractere '6' para a tela do LCD
 	MOV 27H, #'5' ; Define o caractere '5' para a tela do LCD
	MOV 28H, #'4' ; Define o caractere '4' para a tela do LCD
	MOV 29H, #'3' ; Define o caractere '3' para a tela do LCD
	MOV 2AH, #'2' ; Define o caractere '2' para a tela do LCD
	MOV 2BH, #'1' ; Define o caractere '1' para a tela do LCD
      	  
      	
 	MOV R5,#3 ; Define o número de tentativas de sequência como 3
	acall lcd_init; Inicializa o LCD   


  MAIN:
	MOV R1, #41H ; Define o endereço de memória para armazenar a sequência digitada
 	MOV R3, #7 ; Define o número de dígitos da sequência como 7
      	
      ;; Imprime a mensagem "MEMORIZE A SEQUENCIA" na tela do LCD
	mov A, #00h
 	ACALL posicionaCursor ; Posiciona o cursor no início da tela
	MOV A, #'B'
 	ACALL sendCharacter ; Imprime o caractere 'B'
 	MOV A, #'E'
 	ACALL sendCharacter	; Imprime o caractere 'E'
 	MOV A, #'M'
 	ACALL sendCharacter ; Imprime o caractere 'M'
 	MOV A, #' '
 	ACALL sendCharacter ; Imprime o caractere ' '
	MOV A, #'V'
	ACALL sendCharacter ; Imprime o caractere 'V'
	MOV A, #'I'
	ACALL sendCharacter ; Imprime o caractere 'I'
	MOV A, #'N'
	ACALL sendCharacter ; Imprime o caractere 'N'
	MOV A, #'D'
	ACALL sendCharacter ; Imprime o caractere 'D'
	MOV A, #'O'
	ACALL sendCharacter ; Imprime o caractere 'O'
	MOV A, #' '
	ACALL sendCharacter ; Imprime o caractere ' '
	MOV A, #' '
	ACALL sendCharacter ; Imprime o caractere ' '
	MOV A, #' '
	ACALL sendCharacter ; Imprime o caractere ' '
	MOV A, #' '
	ACALL sendCharacter ; Imprime o caractere ' '
	MOV A, #' '
	ACALL sendCharacter ; Imprime o caractere ' '
	MOV A, #' '
	ACALL sendCharacter ; Imprime o caractere ' '
	MOV A, #40H
	ACALL posicionaCursor ; Posiciona o cursor na segunda linha da tela
 	MOV A, #'M'
 	ACALL sendCharacter ; Imprime o caractere 'M'
 	MOV A, #'E'
 	ACALL sendCharacter	; Imprime o caractere 'E'
	MOV A, #'M'
 	ACALL sendCharacter ; Imprime o caractere 'M'
	MOV A, #'O'
	ACALL sendCharacter ; Imprime o caractere 'O'
 	MOV A, #'R'
	ACALL sendCharacter		; Imprime o caractere 'R'
	MOV A, #'I'
 	ACALL sendCharacter	; Imprime o caractere 'I'
	MOV A, #'A'
	ACALL sendCharacter ; Imprime o caractere 'A'
 	MOV A, #' '		
 	ACALL sendCharacter	; Imprime o caractere ' '
 	MOV A, #' '
 	ACALL sendCharacter ; Imprime o caractere ' '
 	MOV A, #' '
	ACALL sendCharacter ; Imprime o caractere ' '
 	MOV A, #' '
	ACALL sendCharacter ; Imprime o caractere ' '
 	MOV A, #' '
 	ACALL sendCharacter	; Imprime o caractere ' '
	MOV A, #' '
 	ACALL sendCharacter	; Imprime o caractere ' '
	MOV A, #' '
 	ACALL sendCharacter	; Imprime o caractere ' '
	MOV A, #' '
 	ACALL sendCharacter	; Imprime o caractere ' '
	MOV A, #' '
 	ACALL sendCharacter	; Imprime o caractere ' '

      lcd_init:
       
 	CLR RS		; Define o pino RS como baixo
 	CLR P1.7	; Define o pino P1.7 como baixo
 	CLR P1.6		; Define o pino P1.6 como baixo
	SETB P1.5		; Define o pino P1.5 como alto
	CLR P1.4	; Define o pino P1.4 como baixo
      	
	SETB EN	; Define o pino EN como alto
 	CLR EN		; Define o pino EN como baixo
 	CALL delay		; Espera um tempo
       
 	SETB EN		; Define o pino EN como alto
 	CLR EN	; Define o pino EN como baixo
      	
 	SETB P1.7 ; Define o pino P1.7 como alto
      	
 	SETB EN	; Define o pino EN como alto
 	CLR EN		; Define o pino EN como baixo
 	CALL delay		; Espera um tempo
       
 	CLR P1.7		; Define o pino P1.7 como baixo
 	CLR P1.6		; Define o pino P1.6 como baixo
 	CLR P1.5		; Define o pino P1.5 como baixo
 	CLR P1.4		; Define o pino P1.4 como baixo
       
 	SETB EN	; Define o pino EN como alto
 	CLR EN		; Define o pino EN como baixo
       
 	SETB P1.6	; Define o pino P1.6 como alto
 	SETB P1.5	; Define o pino P1.5 como alto
       
 	SETB EN	; Define o pino EN como alto
 	CLR EN		; Define o pino EN como baixo
       
 	CALL delay	; Espera um tempo
       
 	CLR P1.7	; Define o pino P1.7 como baixo
 	CLR P1.6		; Define o pino P1.6 como baixo
 	CLR P1.5		; Define o pino P1.5 como baixo
 	CLR P1.4	; Define o pino P1.4 como baixo
       
 	SETB EN	; Define o pino EN como alto
	CLR EN	; Define o pino EN como baixo
       
	SETB P1.7	; Define o pino P1.7 como alto
	SETB P1.6		; Define o pino P1.6 como alto
	SETB P1.5		; Define o pino P1.5 como alto
	SETB P1.4		; Define o pino P1.4 como alto
       
	SETB EN		; Define o pino EN como alto
	CLR EN		; Define o pino EN como baixo
       
	CALL delay	; Espera um tempo
	RET ; Retorna da sub-rotina
       
       
      sendCharacter:
 	SETB RS  	; Define o pino RS como alto
 	MOV C, ACC.7	; Move o bit 7 do acumulador para o registrador C
 	MOV P1.7, C		; Define o pino P1.7 de acordo com o valor de C
 	MOV C, ACC.6		; Move o bit 6 do acumulador para o registrador C
 	MOV P1.6, C			; Define o pino P1.6 de acordo com o valor de C
 	MOV C, ACC.5		; Move o bit 5 do acumulador para o registrador C
 	MOV P1.5, C			; Define o pino P1.5 de acordo com o valor de C
	MOV C, ACC.4	; Move o bit 4 do acumulador para o registrador C
 	MOV P1.4, C			; Define o pino P1.4 de acordo com o valor de C
       
 	SETB EN		; Define o pino EN como alto
 	CLR EN		; Define o pino EN como baixo
       
 	MOV C, ACC.3	; Move o bit 3 do acumulador para o registrador C
 	MOV P1.7, C		; Define o pino P1.7 de acordo com o valor de C
	MOV C, ACC.2	; Move o bit 2 do acumulador para o registrador C
	MOV P1.6, C		; Define o pino P1.6 de acordo com o valor de C
 	MOV C, ACC.1		; Move o bit 1 do acumulador para o registrador C
	MOV P1.5, C		; Define o pino P1.5 de acordo com o valor de C
 	MOV C, ACC.0		; Move o bit 0 do acumulador para o registrador C
 	MOV P1.4, C		; Define o pino P1.4 de acordo com o valor de C
       
	SETB EN		; Define o pino EN como alto
 	CLR EN			; Define o pino EN como baixo
       
 	CALL delay		; Espera um tempo
	CALL delay		; Espera um tempo
 	RET ; Retorna da sub-rotina
       
      posicionaCursor:
 	CLR RS	; Define o pino RS como baixo
 	SETB P1.7		   ; Define o pino P1.7 como alto
 	MOV C, ACC.6		; Move o bit 6 do acumulador para o registrador C
 	MOV P1.6, C			; Define o pino P1.6 de acordo com o valor de C
	MOV C, ACC.5		; Move o bit 5 do acumulador para o registrador C
 	MOV P1.5, C			; Define o pino P1.5 de acordo com o valor de C
 	MOV C, ACC.4	; Move o bit 4 do acumulador para o registrador C
 	MOV P1.4, C		; Define o pino P1.4 de acordo com o valor de C
       
 	SETB EN			; Define o pino EN como alto
 	CLR EN		; Define o pino EN como baixo
       
	MOV C, ACC.3	; Move o bit 3 do acumulador para o registrador C
	MOV P1.7, C			; Define o pino P1.7 de acordo com o valor de C
 	MOV C, ACC.2		; Move o bit 2 do acumulador para o registrador C
	MOV P1.6, C ; Define o pino P1.6 de acordo com o valor de C
	MOV C, ACC.1		; Move o bit 1 do acumulador para o registrador C
	MOV P1.5, C			; Define o pino P1.5 de acordo com o valor de C
	MOV C, ACC.0	; Move o bit 0 do acumulador para o registrador C
	MOV P1.4, C			; Define o pino P1.4 de acordo com o valor de C
       
	SETB EN		; Define o pino EN como alto
	CLR EN			; Define o pino EN como baixo
       
	CALL delay			; Espera um tempo
 	CALL delay			; Espera um tempo
 	RET ; Retorna da sub-rotina
       
      retornaCursor:
	CLR RS	; Define o pino RS como baixo
	CLR P1.7		; Define o pino P1.7 como baixo
	CLR P1.6	; Define o pino P1.6 como baixo
 	CLR P1.5		; Define o pino P1.5 como baixo
 	CLR P1.4		; Define o pino P1.4 como baixo
       
	SETB EN		; Define o pino EN como alto
 	CLR EN		; Define o pino EN como baixo
       
	CLR P1.7		; Define o pino P1.7 como baixo
 	CLR P1.6		; Define o pino P1.6 como baixo
 	SETB P1.5		; Define o pino P1.5 como alto
 	SETB P1.4		; Define o pino P1.4 como alto
       
 	SETB EN	; Define o pino EN como alto
 	CLR EN		; Define o pino EN como baixo
       
 	CALL delay		; Espera um tempo
 	RET ; Retorna da sub-rotina
       
      clearDisplay:
 	CLR RS	; Define o pino RS como baixo
 	CLR P1.7		; Define o pino P1.7 como baixo
 	CLR P1.6		; Define o pino P1.6 como baixo
	CLR P1.5		; Define o pino P1.5 como baixo
	CLR P1.4		; Define o pino P1.4 como baixo
       
 	SETB EN		; Define o pino EN como alto
 	CLR EN		; Define o pino EN como baixo
       
 	CLR P1.7	; Define o pino P1.7 como baixo
 	CLR P1.6	; Define o pino P1.6 como baixo
	CLR P1.5		; Define o pino P1.5 como baixo
	SETB P1.4	; Define o pino P1.4 como alto
       
 	SETB EN	; Define o pino EN como alto
	CLR EN		; Define o pino EN como baixo
       
 	CALL delay		; Espera um tempo
 	RET ; Retorna da sub-rotina
       
      delay:
 	MOV R7, #15 ; Define o valor inicial do registrador R7 como 15
 	DJNZ R7, $ ; Decrementa o registrador R7 e repete a instrução enquanto R7 for diferente de zero
 	RET ; Retorna da sub-rotina     
  END
